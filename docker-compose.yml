services:

  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: ape-api:latest
    container_name: ape-api
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      - db
    ports:
      - "8000:8000"
    env_file:
      - .env
    command:
      - uvicorn
      - main:app
      - --host
      - "0.0.0.0"
      - --port
      - "8000"
      - --reload
      - --workers
      - "1"
    networks:
      - ape_network

  flutter:
    build:
      context: ./flutter
      args:
        API_URL: http://api:8000/api/v1
    container_name: flutter-web
    ports:
      - "8080:8080"
    depends_on:
      - api
    networks:
      - ape_network

  db:
    image: postgres:16
    container_name: ape-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ape_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ape_network

  busybox:
    image: busybox
    container_name: ape-busybox
    command: tail -f /dev/null
    networks:
      - ape_network

  tests:
    build:
      context: .
    container_name: ape-tests
    command: ["pytest", "tests/"]
    volumes:
      - .:/app
    depends_on:
      - api
    env_file:
      - .env
    networks:
      - ape_network

volumes:
  postgres_data:

networks:
  ape_network:
    driver: bridge
